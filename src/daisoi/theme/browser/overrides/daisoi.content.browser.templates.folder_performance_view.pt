<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
  xmlns:tal="http://xml.zope.org/namespaces/tal"
  xmlns:metal="http://xml.zope.org/namespaces/metal"
  xmlns:i18n="http://xml.zope.org/namespaces/i18n"
  lang="en"
  metal:use-macro="context/main_template/macros/master"
  i18n:domain="daisoi.theme">
<body>
<metal:content-core fill-slot="content-core">
<metal:content-core define-macro="content-core"
          tal:define="toc context/table_of_contents|nothing;">

  <div class="col-md-12">
    <ul class="themesflat-filter style-1 clearfix">
      <li id="sAll"><a href="#" data-filter="*" >All</a></li>
      <tal:define tal:define="imgSub view/getImgSubject">
        <tal:repeat tal:repeat="sub imgSub">
          <li id="s${python: ''.join(str(ord(c)) for c in sub.decode('utf8'))}"><a href="#" data-filter=".${sub}" >${python: imgSub[sub]['Title']}</a></li>
        </tal:repeat>
      </tal:define>
    </ul>

    <metal:listingmacro define-macro="listing">
      <tal:results define="batch view/results;">
        <tal:listing condition="batch">
          <div class="themesflat-spacer clearfix" data-desktop="40" data-mobile="35" data-smobile="35"></div>
          <div class="themesflat-project style-2 isotope-project has-margin mg15 data-effect clearfix">
            <tal:repeat tal:repeat="item batch">
              <tal:define tal:define="obj item/getObject;
                                      item_title item/Title;
                                      item_description obj/description;
                                      item_url item/getURL;
                                      item_subject item/Subject;">
                <div class="project-item ${python: ' '.join(item_subject)} ">
                  <div class="inner">
                    <div class="thumb data-effect-item has-effect-icon w40 offset-v-19 offset-h-20 performance">
                      <img class="lazyload" data-src="${item_url}/@@images/image" alt="Image" style="height: 100%; object-fit: cover; width: 100%;">
                      <div class="elm-link">
                        <a data-fancybox data-type="iframe" data-src="${item/getURL}/view" href="javascript:;" class="icon-1 icon-search"></a>
                      </div>
                      <div class="overlay-effect bg-color-3"></div>
                    </div>
                    <div class="text-wrap">
                      <h5 class="heading"><a>${item_title}</a></h5>
                      <div class="elm-meta">
                        <p class="two-line" >${item_description}</p>
                      </div>
                    </div>
                  </div>
                </div><!-- /.product-item -->
              </tal:define>
            </tal:repeat>
          </div><!-- /.themesflat-project -->
          <div class="button-wrap has-icon icon-left size-14 pf21 text-center">
            <a class="themesflat-button bg-accent pd32" id="loadMore" style="cursor: pointer !important;">
              <span><span i18n:translate="">LOAD MORE</span><span class="icon"><i class="ion-load-c"></i></span></span>
            </a>
          </div>
        </tal:listing>
        <metal:empty metal:define-slot="no_items_in_listing">
          <p class="discreet"
              tal:condition="not: view/results"
              i18n:translate="">
            No results were found.
          </p>
        </metal:empty>
      </tal:results>
    </metal:listingmacro>
  </div><!-- /.col-md-12 -->

  <script>
    document.onreadystatechange = function subColor() {
        img_subject  = getQueryString("img_subject");
        if(img_subject){
            var temp = "";
            for(var i=0; i<img_subject.length; i++){
              temp+=img_subject.charCodeAt(i);
            }
            img_subject = temp;
            $("#s"+img_subject).addClass("active");
            $("#s"+img_subject).click();
        }else{
            $("#sAll").addClass("active");
            $("#sAll").click();
        }
    }

    function toSubject(sub){
      location.replace("?img_subject="+encodeURIComponent(sub))
    }

    function getQueryString() {
      var key = false, res = {}, itm = null;
      // get the query string without the ?
      var qs = location.search.substring(1);
      // check for the key as an argument
      if (arguments.length > 0 && arguments[0].length > 1)
        key = arguments[0];
      // make a regex pattern to grab key/value
      var pattern = /([^&=]+)=([^&]*)/g;
      // loop the items in the query string, either
      // find a match to the argument, or build an object
      // with key/value pairs
      while (itm = pattern.exec(qs)) {
        if (key !== false && decodeURIComponent(itm[1]) === key)
          return decodeURIComponent(itm[2]);
        else if (key === false)
          res[decodeURIComponent(itm[1])] = decodeURIComponent(itm[2]);
      }

      return key === false ? res : null;
    }
  </script>

</metal:content-core>
</metal:content-core>

</body>
</html>


